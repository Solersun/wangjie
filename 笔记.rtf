{\rtf1\ansi\ansicpg936\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red180\green0\blue98;\red77\green0\blue158;\red53\green15\blue128;
\red196\green1\blue21;\red255\green250\blue242;\red14\green14\blue255;\red0\green11\blue255;\red47\green39\blue255;
\red132\green102\blue127;\red68\green137\blue147;\red92\green38\blue153;\red58\green63\blue135;\red253\green236\blue34;
\red100\green56\blue32;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs28 \cf0 \CocoaLigature0 -(\cf2 void\cf0 )creat1\{\
\
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 URLWithString\cf0 :\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0 ];\
    \cf3 NSURLRequest\cf0  *request = [\cf3 NSURLRequest\cf0  \cf4 requestWithURL\cf0 :url];\
    \
    \cf3 NSURLResponse\cf0  *respons = \cf2 nil\cf0 ;\
    \cf3 NSError\cf0  *error = \cf2 nil\cf0 ;\
    \
    \cf3 NSData\cf0  *data = [\cf3 NSURLConnection\cf0  \cf4 sendSynchronousRequest\cf0 :request \cf4 returningResponse\cf0 :&respons \cf4 error\cf0 :&error];\
    \
    \cf2 if\cf0  (error ==\cf2 nil\cf0 ) \{\
        \cf4 NSLog\cf0 (\cf5 @"
\f1 \'b4\'b4\'bd\'a8\'b3\'c9\'b9\'a6
\f0 %@"\cf0 ,data);\
    \}\cf2 else\cf0 \{\
        \cf4 NSLog\cf0 (\cf5 @"%@"\cf0 ,error);\
    \}\
    \
\
    \
\}\
\
\
\cf6 //
\f1 \'d2\'ec\'b2\'bd
\f0 \cf0 \
- (\cf2 void\cf0 )creat2\{\
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 URLWithString\cf0 :\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0 ];\
    \
    \cf3 NSURLRequest\cf0  *requset = [NSURLRequest requestWithURL:url];\
    \
    [NSURLConnection sendAsynchronousRequest:requset queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse * \cf2 _Nullable\cf0  response, NSData * \cf2 _Nullable\cf0  data, NSError * \cf2 _Nullable\cf0  connectionError) \{\
        NSLog(\cf5 @"%@,%@,%@"\cf0 ,response,data,connectionError);\
    \}];\
\
\}\
\
\
\cf6 //SDWeb
\f1 \'cf\'c2\'d4\'d8\'cd\'bc\'c6\'ac
\f0 ;\cf0 \
- (\cf2 void\cf0 )creat3\{\
    \
    NSURL *url = [NSURL URLWithString:\cf5 @"http://10.0.8.8/sns/my/headimage.php"\cf0 ];\
    UIImage *image = [UIImage imageNamed:\cf5 @"placeholder"\cf0 ];\
    \
    [_myimageView sd_setImageWithURL:url placeholderImage:image];\
\
\}\
\
\cf6 //post
\f1 \'c7\'eb\'c7\'f3
\f0 \cf0 \
- (\cf2 void\cf0 )creat4\{\
\
    NSURL *url = [NSURL URLWithString:\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0 ];\
    \
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];\
    \
    request.HTTPMethod = \cf5 @"post"\cf0 ;\
    NSString *param = \cf5 @"page=1&number=10"\cf0 ;\
    request.HTTPBody = [param dataUsingEncoding:NSUTF8StringEncoding];\
    \
    \
    [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse * \cf2 _Nullable\cf0  response, NSData * \cf2 _Nullable\cf0  data, NSError * \cf2 _Nullable\cf0  connectionError) \{\
        NSLog(\cf5 @"%@"\cf0 ,data);\
    \}];\
\
\
\}\
\
\cf6 //AFNetWorking\cf0 \
- (\cf2 void\cf0 )creat5\{\
\
\cf6 //    NSURL *url = [NSURL URLWithString:@"{\field{\*\fldinst{HYPERLINK "http://10.0.8.8/sns/my/user_list.php"}}{\fldrslt \cf7 http://10.0.8.8/sns/my/user_list.php}}"];\cf0 \
\cf6 //    \cf0 \
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];\
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:\cf5 @"text/html"\cf0 ];\
\cf6 //    NSURLSessionDownloadDelegate\cf0 \
    NSDictionary *param = \cf8 @\{\cf5 @"currency"\cf0 :\cf5 @"rmb"\cf0  ,\cf5 @"page"\cf0 :\cf5 @"1"\cf8 \}\cf0 ;\
    \
    [manager GET:\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0  parameters:param success:^(AFHTTPRequestOperation *operation, \cf2 id\cf0  responseObject) \{\
        \
        NSLog(\cf5 @"%@"\cf0 ,responseObject);\
    \} failure:^(AFHTTPRequestOperation *operation, NSError *error) \{\
        NSLog(\cf5 @"%@"\cf0 ,error);\
    \}];\
\
\
\}\
\
\
\
 \cf9 /**\
 *session
\f1 \'bc\'b0\'c6\'e4\'b4\'fa\'c0\'ed\'b7\'bd\'b7\'a8
\f0 \
 */\cf0 \
\
-(\cf2 void\cf0 )creatSession\{\
 \cf6 //1.url\cf0 \
 \cf6 //2.request\cf0 \
 \cf6 //3.config\cf0 \
 \cf6 //4.session\cf0 \
 \cf6 //5.dataTask\cf0 \
 \cf6 //[dataTask resume];\cf0 \
\
    \
    NSURL *url = [NSURL URLWithString:\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0 ];\
    NSURLRequest *request = [NSURLRequest requestWithURL:url];\
    \
    NSURLSessionConfiguration *config = [NSURLSessionConfiguration defaultSessionConfiguration];\
    NSURLSession *session = [NSURLSession sessionWithConfiguration:config delegate:\cf2 self\cf0  delegateQueue:[NSOperationQueue mainQueue]];\
    NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request];\
    [dataTask resume];\
\}\
\
 \cf6 //didresponse\cf0 \
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask didReceiveResponse:(NSURLResponse *)response completionHandler:(\cf2 void\cf0  (^)(NSURLSessionResponseDisposition))completionHandler \{\
\
    NSLog(\cf5 @"
\f1 \'ca\'d5\'b5\'bd\'cf\'e0\'d3\'a6
\f0 "\cf0 );\
    _resultData = [NSMutableData new];\
    completionHandler(NSURLSessionResponseAllow);\
\}\
 \
 \cf6 //didrecivedata\cf0 \
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask didReceiveData:(NSData *)data\{\
    [\cf2 self\cf0 .resultData appendData:data];\
\}\
 \
 didcomplete\
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error\{\
\
    NSLog(\cf5 @"
\f1 \'cd\'ea\'b3\'c9
\f0 "\cf0 );\
\
\}\
\
\
\
\cf9 /**\
 *  
\f1 \'c6\'d5\'cd\'a8\'cf\'c2\'d4\'d8
\f0 \
 */\cf0 \
\
- (\cf2 void\cf0 )creatSessionDownload\{\
    \
    \
    \cf6 //1.url\cf0 \
    \cf6 //2.response\cf0 \
    \cf6 //3.config\cf0 \
    \cf6 //4.session\cf0 \
    \cf6 //5.download\cf0 \
    \cf6 //6.resume\cf0 \
    NSURL *url = [NSURL URLWithString:\cf5 @"http://dlsw.baidu.com/sw-search-sp/soft/a4/40511/StormMac_1.0.5.1453107689.dmg"\cf0 ];\
    \
    NSURLRequest *request =[NSURLRequest requestWithURL:url];\
    \
    \
    \cf6 //
\f1 \'c6\'d5\'cd\'b4\'cf\'c2\'d4\'d8
\f0 \cf0 \
    NSURLSessionConfiguration *config = [NSURLSessionConfiguration defaultSessionConfiguration];\
    \cf6 //
\f1 \'ba\'f3\'cc\'a8\'cf\'c2\'d4\'d8
\f0 \cf0 \
    NSURLSessionConfiguration *config1 = [NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:\cf5 @"com.xxx.xxxapp"\cf0 ];\
    \
    _session = [NSURLSession sessionWithConfiguration:config delegate:\cf2 self\cf0  delegateQueue:[NSOperationQueue mainQueue]];\
    _dataload = [_session downloadTaskWithRequest:request];\
    \
    [_dataload resume];\
\
\}\
\
\cf6 //didwritedata\cf0 \
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite\{\
    \
    \cf2 float\cf0  progress = (\cf2 float\cf0 )totalBytesWritten/(\cf2 float\cf0 )totalBytesExpectedToWrite;\
    NSLog(\cf5 @"%f"\cf0 ,progress);\
    \
\}\
\
\cf6 //didfinishdownload\cf0 \
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask didFinishDownloadingToURL:(NSURL *)location \{\
    NSLog(\cf5 @"
\f1 \'cf\'c2\'d4\'d8\'cd\'ea\'b3\'c9
\f0 "\cf0 );\
\}\
\
\cf6 //didcomplete\cf0 \
-(\cf2 void\cf0 )URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error\{\
    \cf2 if\cf0  (error) \{\
        NSLog(\cf5 @"
\f1 \'cf\'c2\'d4\'d8\'b3\'f6\'b4\'ed
\f0 "\cf0 );\
    \}\
    \
\}\
 \
- (\cf2 IBAction\cf0 )mybtn:(UIButton *)sender \{\
    \
    \cf2 if\cf0  (\cf2 self\cf0 .resumData) \{\
        \
        _dataload = [_session downloadTaskWithResumeData:\cf2 self\cf0 .resumData];\
        [_dataload resume];\
        \cf2 self\cf0 .resumData = \cf2 nil\cf0 ;\
    \}\cf2 else\cf0  \{\
    \
        [_dataload cancelByProducingResumeData:^(NSData * \cf2 _Nullable\cf0  resumeData) \{\
            \cf2 self\cf0 .resumData = resumeData;\
        \}];\
    \
    \}\
\}\
\
\
\
\cf9 /**\
 *  AFNestWorking With Session\
 */\cf0 \
\
- (\cf2 void\cf0 )CreatSessionByAF\{\
\
    AFHTTPSessionManager *manger = [AFHTTPSessionManager manager];\
    manger.responseSerializer.acceptableContentTypes = [NSSet setWithObject:\cf5 @"text/html"\cf0 ];\
    [manger GET:\cf5 @"http://10.0.8.8/sns/my/user_list.php"\cf0  parameters:\cf2 nil\cf0  success:^(NSURLSessionDataTask *task, \cf2 id\cf0  responseObject) \{\
        NSLog(\cf5 @"%@"\cf0 ,responseObject);\
    \} failure:^(NSURLSessionDataTask *task, NSError *error) \{\
        NSLog(\cf5 @"%@"\cf0 ,error);\
    \}];\
    \
    \
\}
\fs36 \

\fs28 \
- (\cf2 void\cf0 )viewDidLoad \{\
    [\cf2 super\cf0  \cf4 viewDidLoad\cf0 ];\
    \cf6 // Do any additional setup after loading the view, typically from a nib.\cf0 \
    [\cf2 self\cf0  \cf10 creatAVplayer\cf0 ];\
    \cf2 self\cf0 .\cf11 playSlider\cf0 .\cf12 continuous\cf0  = \cf2 NO\cf0 ;\
    [\cf2 self\cf0 .\cf11 playSlider\cf0  \cf4 addTarget\cf0 :\cf2 self\cf0  \cf4 action\cf0 :\cf2 @selector\cf0 (change:) \cf4 forControlEvents\cf0 :\cf13 UIControlEventValueChanged\cf0 ];\
    [\cf2 self\cf0 .\cf11 playSlider\cf0  \cf4 addTarget\cf0 :\cf2 self\cf0  \cf4 action\cf0 :\cf2 @selector\cf0 (playerSliderTouchDown:) \cf4 forControlEvents\cf0 :\cf13 UIControlEventTouchDown\cf0 ];\
    [\cf2 self\cf0  \cf10 addPlayerTimeObserve\cf0 ];\
\}\
\
\
\cf9 /**\
 *  
\f1 \'b5\'e3\'bb\'f7\'ca\'c7\'d2\'c6\'b3\'fd\'b9\'db\'b2\'ec\'d5\'df
\f0 \
 */\cf0 \
-(\cf2 void\cf0 )playerSliderTouchDown:(\cf3 UISlider\cf0  *)sender\{\
    \
    \cf6 //
\f1 \'b5\'b1\'b5\'e3\'bb\'f7\'ca\'c7\'d2\'c6\'b3\'fd\'b9\'db\'b2\'ec\'d5\'df
\f0 \cf0 \
    [\cf2 self\cf0  \cf10 removePlayerObserve\cf0 ];\
\}\
\
\
- (\cf2 void\cf0 )change:(\cf3 UISlider\cf0  *)sender\{\
    \cf6 //
\f1 \'cf\'c8\'d4\'dd\'cd\'a3
\f0 \cf0 \
    [\cf11 _player\cf0  \cf4 pause\cf0 ];\
    \
    \cf6 //
\f1 \'bb\'f1\'b5\'c3\'d7\'dc\'b9\'b2\'ca\'b1\'bc\'e4
\f0 \cf0 \
    \cf12 CMTime\cf0  totalTime = \cf2 self\cf0 .\cf11 player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 ;\
    \cf6 //
\f1 \'bd\'ab\'d2\'aa\'d1\'b0\'d5\'d2\'b5\'c4\'ca\'b1\'bc\'e4
\f0 \cf0 \
    \cf12 CMTime\cf0  seekTime = \cf4 CMTimeMake\cf0 (totalTime.\cf12 value\cf0  * sender.\cf12 value\cf0 , totalTime.\cf12 timescale\cf0 );\
    \
    \cf6 // CMTime\cf0 \
    \cf6 //1.value 
\f1 \'d2\'bb\'b9\'b2\'b2\'a5\'b7\'c5\'c1\'cb\'b6\'e0\'c9\'d9\'d6\'a1
\f0 \cf0 \
    \cf6 //2.timescale 
\f1 \'b1\'ed\'ca\'be\'c3\'bf\'c3\'eb\'bc\'b8\'d6\'a1
\f0 \cf0 \
    [\cf2 self\cf0 .\cf11 player\cf0  \cf4 seekToTime\cf0 :seekTime \cf4 completionHandler\cf0 :^(\cf2 BOOL\cf0  finished) \{\
        [\cf11 _player\cf0  \cf4 play\cf0 ];\
        [\cf2 self\cf0  \cf10 addPlayerTimeObserve\cf0 ];\
    \}];\
    \
\}\
\
\
\
\
\cf9 /**\
 *  
\f1 \'d2\'c6\'b3\'fd\'b2\'a5\'b7\'c5\'ca\'b1\'bc\'e4\'b9\'db\'b2\'ec\'d5\'df
\f0 \
 */\cf0 \
- (\cf2 void\cf0 )removePlayerObserve\{\
\
    [\cf11 _player\cf0  \cf4 removeTimeObserver\cf0 :\cf2 self\cf0 .\cf11 periodicTimeObserve\cf0 ];\
\
\}\
\
\
\cf9 /**\
 *  
\f1 \'cc\'ed\'bc\'d3
\f0  
\f1 \'b2\'a5\'b7\'c5\'ca\'b1\'bc\'e4\'b9\'db\'b2\'ec\'d5\'df
\f0 \
 */\cf0 \
- (\cf2 void\cf0 )addPlayerTimeObserve\{\
\
    \cf6 //
\f1 \'cc\'ed\'bc\'d3\'b9\'db\'b2\'ec\'d5\'df
\f0 \cf0 \
    \cf6 //1.Interval 
\f1 \'b9\'db\'b2\'ec\'ca\'b1\'bc\'e4\'bc\'e4\'b8\'f4
\f0 \cf0 \
    \cf6 //2.dispatch_get_main_queue() 
\f1 \'d6\'f7\'cf\'df\'b3\'cc\'cb\'a2\'d0\'c2
\f0 \cf0 \
    \cf6 //3.block 
\f1 \'b1\'e4\'bb\'af\'b5\'c4\'bb\'d8\'b5\'f7
\f0 \cf0 \
    \
    \
    \cf6 //
\f1 \'c8\'e7\'b9\'fb\'b2\'bb\'cf\'eb
\f0 block
\f1 \'b6\'d4\'d2\'bb\'b8\'f6\'b6\'d4\'cf\'f3\'c7\'bf\'d2\'fd\'d3\'c3
\f0  
\f1 \'be\'cd\'d3\'c3
\f0 weak
\f1 \'c0\'b4\'d0\'de\'ca\'ce\'d5\'e2\'b8\'f6\'b1\'e4\'c1\'bf
\f0 \cf0 \
    \cf6 //
\f1 \'c9\'f9\'c3\'f7\'d2\'bb\'b8\'f6\'d6\'b8\'d5\'eb\'c8\'f5\'d2\'fd\'d3\'c3
\f0 \cf0 \
    \cf2 __weak\cf0  \cf14 ViewController\cf0  *WeakSelf = \cf2 self\cf0 ;\
  \cf2 self\cf0 .\cf11 periodicTimeObserve\cf0  =  [\cf2 self\cf0 .\cf11 player\cf0  \cf4 addPeriodicTimeObserverForInterval\cf0 :\cf4 CMTimeMake\cf0 (\cf8 30\cf0 , \cf8 30\cf0 ) \cf4 queue\cf0 :\cf4 dispatch_get_main_queue\cf0 () \cf4 usingBlock\cf0 :^(\cf12 CMTime\cf0  time) \{\
        \
        \cf6 //
\f1 \'ca\'d7\'cf\'c8\'d5\'d2\'b5\'bd\'b5\'b1\'c7\'b0\'bd\'f8\'b6\'c8
\f0 \cf0 \
        \cf6 //
\f1 \'b5\'b1\'c7\'b0\'b5\'c4\'ca\'b1\'bc\'e4
\f0  = 
\f1 \'b5\'b1\'c7\'b0\'d6\'a1\'ca\'fd
\f0 /
\f1 \'c3\'bf\'c3\'eb\'d6\'a1\'ca\'fd
\f0 \cf0 \
        \cf2 float\cf0  currentSecond = \cf2 self\cf0 .\cf11 player\cf0 .\cf4 currentTime\cf0 .\cf12 value\cf0  *\cf8 1.0\cf0 /\cf2 self\cf0 .\cf11 player\cf0 .\cf4 currentTime\cf0 .\cf12 timescale\cf0 ;\
        \cf6 //
\f1 \'d7\'dc\'b5\'c4\'ca\'b1\'bc\'e4
\f0 \cf0 \
        \cf2 float\cf0  totalCount = \cf2 self\cf0 .\cf11 player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 value\cf0  *\cf8 1.0\cf0 /\cf2 self\cf0 .\cf11 player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 timescale\cf0 ;\
\cf6 //        NSLog(@"=%d=%lld=",WeakSelf.player.currentTime.timescale,WeakSelf.player.currentTime.value);\cf0 \
\cf6 //        NSLog(@"~%d~%lld~",WeakSelf.player.currentItem.duration.timescale,WeakSelf.player.currentItem.duration.value);\cf0 \
        WeakSelf.\cf11 showtime\cf0 .\cf12 text\cf0  =[\cf3 NSString\cf0  \cf4 stringWithFormat\cf0 :\cf5 @"%d"\cf0 ,(\cf2 int\cf0 )currentSecond];\
        \
        \cf6 //
\f1 \'d5\'e2\'d1\'f9\'d0\'b4\'bf\'c9\'c4\'dc\'b5\'bc\'d6\'c2\'d1\'ad\'bb\'b7\'d3\'a6\'d3\'c3
\f0 \cf0 \
        \cf6 //self ->playerSlider -> block ->self\cf0 \
        \cf2 float\cf0  progress = currentSecond/totalCount;\
        [WeakSelf.\cf11 playSlider\cf0  \cf4 setValue\cf0 :progress \cf4 animated\cf0 :\cf2 YES\cf0 ];\
    \}];\
\}\
\
\
\
\
\
\
- (\cf2 void\cf0 )creatAVplayer\{\
\
    \cf6 //
\f1 \'b4\'b4\'bd\'a8
\f0  
\f1 \'bf\'c9\'d2\'d4\'b2\'a5\'b7\'c5\'b1\'be\'b5\'d8
\f0  
\f1 \'d2\'b2\'bf\'c9\'d2\'d4\'cd\'f8\'c2\'e7
\f0 \cf0 \
    \
    \cf6 //
\f1 \'d2\'bb\'ca\'d7\'b8\'e8\'cf\'e0\'b5\'b1\'d3\'da\'d2\'bb\'b8\'f6
\f0 Item\cf0 \
    \cf6 //
\f1 \'c4\'c3\'b5\'bd\'b1\'be\'b5\'d8\'d2\'f4\'c0\'d6\'b5\'d8\'d6\'b7
\f0 \cf0 \
    \cf3 NSString\cf0  *path =[[\cf3 NSBundle\cf0  \cf4 mainBundle\cf0 ] \cf4 pathForResource\cf0 :\cf5 @"
\f1 \'c0\'ee\'c8\'d9\'ba\'c6
\f0  - 
\f1 \'c4\'a3\'cc\'d8
\f0 .mp3"\cf0  \cf4 ofType\cf0 :\cf2 nil\cf0 ];\
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 fileURLWithPath\cf0 :path];\
    \
    \cf3 AVPlayerItem\cf0  *playerItem = [[\cf3 AVPlayerItem\cf0  \cf4 alloc\cf0 ] \cf4 initWithURL\cf0 :url];\
    \cf6 //
\f1 \'b4\'b4\'bd\'a8\'b2\'a5\'b7\'c5\'c6\'f7
\f0 \cf0 \
    \cf11 _player\cf0  = [[\cf3 AVPlayer\cf0  \cf4 alloc\cf0 ] \cf4 initWithPlayerItem\cf0 :playerItem];\
    \
    \cf6 //
\f1 \'bc\'e0\'cc\'fd\'b2\'a5\'b7\'c5\'c6\'f7\'b5\'c4\'d7\'b4\'cc\'ac
\f0 \cf0 \
    \cf6 //player.status\cf0 \
\cf6 //    AVPlayerStatusUnknown, 
\f1 \'ce\'b4\'d6\'aa
\f0 \cf0 \
\cf6 //    AVPlayerStatusReadyToPlay, 
\f1 \'d7\'bc\'b1\'b8\'ba\'c3\'c1\'cb
\f0 \cf0 \
\cf6 //    AVPlayerStatusFailed 
\f1 \'ca\'a7\'b0\'dc
\f0 \cf0 \
    \cf6 //KVO key Value Observe 
\f1 \'cb\'ad\'b9\'db\'b2\'ec
\f0  
\f1 \'cb\'ad\'ca\'b5\'cf\'d6\'d2\'bb\'b8\'f6\'b7\'bd\'b7\'a8
\f0 \cf0 \
   [\cf11 _player\cf0   \cf4 addObserver\cf0 :\cf2 self\cf0  \cf4 forKeyPath\cf0 :\cf5 @"status"\cf0  \cf4 options\cf0 :\cf13 NSKeyValueObservingOptionNew\cf0  |\cf13 NSKeyValueObservingOptionOld\cf0  \cf4 context\cf0 :\cf2 nil\cf0 ];\
    \
    [\cf2 self\cf0  \cf10 addPlayerTimeObserve\cf0 ];\
    \
\}\
\
-(\cf2 void\cf0 )observeValueForKeyPath:(\cf3 NSString\cf0  *)keyPath ofObject:(\cf2 id\cf0 )object change:(\cf3 NSDictionary\cf0 <\cf3 NSString\cf0  *,\cf2 id\cf0 > *)change context:(\cf2 void\cf0  *)context \{\
    \
    \cf2 if\cf0  (\cf11 _player\cf0 .\cf12 status\cf0  == \cf13 AVPlayerStatusReadyToPlay\cf0 ) \{\
        \cf4 NSLog\cf0 (\cf5 @"
\f1 \'d7\'bc\'b1\'b8\'ba\'c3\'c1\'cb\'bf\'c9\'d2\'d4\'b2\'a5\'b7\'c5
\f0 %@"\cf0 ,\cf4 NSHomeDirectory\cf0 ());\
    \}\
    \
\
\}\
\
\cf9 /**\
 *  
\f1 \'b2\'a5\'b7\'c5
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )play:(\cf3 UIButton\cf0  *)sender \{\
    [\cf11 _player\cf0  \cf4 play\cf0 ];\
\}\
\
\cf9 /**\
 *  
\f1 \'d4\'dd\'cd\'a3
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )pause:(\cf3 UIButton\cf0  *)sender \{\
    [\cf11 _player\cf0  \cf4 pause\cf0 ];\
\}\
\
\cf9 /**\
 *  
\f1 \'c9\'cf\'d2\'bb\'c7\'fa
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )last:(\cf3 UIButton\cf0  *)sender \{\
    \
\
\}\
\cf9 /**\
 *  
\f1 \'cf\'c2\'d2\'bb\'c7\'fa
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )next:(\cf3 UIButton\cf0  *)sender \{\
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 URLWithString\cf0 :\cf5 @"http://jameswatt.local/123.mp3"\cf0 ];\
    \
    \cf3 AVPlayerItem\cf0  *playerItem = [[\cf3 AVPlayerItem\cf0  \cf4 alloc\cf0 ] \cf4 initWithURL\cf0 :url];\
    \cf6 //
\f1 \'b4\'b4\'bd\'a8\'b2\'a5\'b7\'c5\'c6\'f7
\f0 \cf0 \
    [\cf11 _player\cf0  \cf4 replaceCurrentItemWithPlayerItem\cf0 :playerItem];\
\}\
\
\
\
- (\cf2 void\cf0 )addPlayerObserve\{\
\
    \cf2 __weak\cf0  \cf14 ViewController\cf0  *weakself = \cf2 self\cf0 ;\
  \cf2 self\cf0 .\cf11 prodicObserve\cf0  = [\cf11 _player\cf0  \cf4 addPeriodicTimeObserverForInterval\cf0 :\cf4 CMTimeMake\cf0 (\cf8 30\cf0 , \cf8 30\cf0 ) \cf4 queue\cf0 :\cf4 dispatch_get_main_queue\cf0 () \cf4 usingBlock\cf0 :^(\cf12 CMTime\cf0  time) \{\
      \cf6 //
\f1 \'b5\'b1\'b1\'e4\'bb\'af\'ca\'c7
\f0  
\f1 \'c8\'c3\'ca\'d3\'c6\'b5\'bd\'f8\'b6\'c8\'b1\'e4\'bb\'af
\f0 \cf0 \
      \
      \cf6 //
\f1 \'b5\'b1\'c7\'b0\'d6\'a1\'ca\'fd
\f0 /
\f1 \'c3\'bf\'c3\'eb\'d6\'a1\'ca\'fd
\f0  =
\f1 \'b5\'b1\'c7\'b0\'c3\'e8\'ca\'f6
\f0 \cf0 \
      \cf2 float\cf0  currentSecond = \cf11 _player\cf0 .\cf4 currentTime\cf0 .\cf12 value\cf0  *\cf8 1.0\cf0  /\cf11 _player\cf0 .\cf4 currentTime\cf0 .\cf12 timescale\cf0  * \cf8 1.0\cf0  ;\
      \cf6 //
\f1 \'d7\'dc\'b9\'b2\'b5\'c4
\f0 \cf0 \
      \cf2 float\cf0  total = \cf11 _player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 value\cf0  *\cf8 1.0\cf0 /\cf11 _player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 timescale\cf0  *\cf8 1.0\cf0 ;\
      \
      \cf2 float\cf0  progress = currentSecond/total;\
      \
      [weakself.\cf11 slider\cf0  \cf4 setValue\cf0 :progress \cf4 animated\cf0 :\cf2 YES\cf0 ];\
      \
    \}];\
\
\
\
\}\
\
\
\
- (\cf2 void\cf0 )creatAVplayer\{\
\
\
    \
\cf6 //    path = [path stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];\cf0 \
\cf6 //    NSLog(@"%@",path);\cf0 \
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 URLWithString\cf0 :\cf5 @"http://jameswatt.local/MovieTest.mp4"\cf0 ];\
    \
    \cf3 AVPlayerItem\cf0  *playItem = [\cf3 AVPlayerItem\cf0  \cf4 playerItemWithURL\cf0 :url];\
    \cf11 _player\cf0  = [\cf3 AVPlayer\cf0  \cf4 playerWithPlayerItem\cf0 :playItem];\
    \
    \
    \cf6 //
\f1 \'cc\'ed\'bc\'d3\'ca\'d3\'c6\'c1\'bd\'e7\'c3\'e6
\f0 \cf0 \
    \cf11 _videoLayer\cf0  = [\cf3 AVPlayerLayer\cf0  \cf4 playerLayerWithPlayer\cf0 :\cf11 _player\cf0 ];\
\cf6 //    //
\f1 \'c9\'e8\'d6\'c3\'c3\'aa\'b5\'e3\'c0\'e0\'cb\'c6\'d3\'da
\f0 view
\f1 \'d4\'b6\'b5\'e3
\f0 \cf0 \
\cf6 //    videoLayer.position = CGPointMake(20, 200);\cf0 \
\cf6 //    //
\f1 \'c9\'e8\'d6\'c3\'c1\'cb\'b4\'f3\'d0\'a1
\f0 \cf0 \
\cf6 //    videoLayer.bounds = CGRectMake(0, 0, 200, 200);\cf0 \
    \cf11 _videoLayer\cf0 .\cf12 frame\cf0  = \cf4 CGRectMake\cf0 (\cf8 20\cf0 , \cf8 200\cf0 ,\cf2 self\cf0 .\cf12 view\cf0 .\cf12 frame\cf0 .\cf12 size\cf0 .\cf12 width\cf0 -\cf8 2\cf0 *\cf8 20\cf0 ,\cf8 300\cf0 );\
    \
    \cf6 //layer 
\f1 \'d6\'bb\'c4\'dc\'cc\'ed\'bc\'d3\'b5\'bd
\f0 layer
\f1 \'c9\'cf
\f0 \cf0 \
    [\cf2 self\cf0 .\cf12 view\cf0 .\cf12 layer\cf0  \cf4 addSublayer\cf0 :\cf11 _videoLayer\cf0 ];\
    \
     \cf6 //
\f1 \'b5\'f7\'d3\'c3\'b9\'db\'b2\'ec\'d5\'df
\f0 \cf0 \
    [\cf2 self\cf0  \cf10 addPlayerObserve\cf0 ];\
    \
    \cf6 //
\f1 \'c4\'da\'c8\'dd\'c4\'a3\'ca\'bd
\f0 \cf0 \
    \
\cf6 //    AVLayerVideoGravityResize (
\f1 \'cc\'ee\'b3\'e4\'d5\'fb\'b8\'f6
\f0 layer
\f1 \'ca\'d3\'cd\'bc\'bb\'e1\'b1\'e4\'d0\'ce
\f0 )\cf0 \
\cf6 //    AVLayerVideoGravityResizeAspect (
\f1 \'c4\'ac\'c8\'cf\'b5\'c4
\f0 , 
\f1 \'b0\'b4\'b1\'c8\'c0\'fd\'d1\'b9\'cb\'f5\'b2\'bb\'bb\'e1\'b7\'a2\'c9\'fa\'d0\'ce\'b1\'e4
\f0 )\cf0 \
\cf6 //    AVLayerVideoGravityResizeAspectFill (
\f1 \'b0\'b4\'b1\'c8\'c0\'fd\'cc\'ee\'b3\'e4
\f0  
\f1 \'b2\'bb\'bb\'e1\'d3\'d0\'ba\'da\'b1\'df
\f0 )\cf0 \
    \
    \cf11 _videoLayer\cf0 .\cf12 videoGravity\cf0  = \cf12 AVLayerVideoGravityResize\cf0 ;\
\}\
\
\
\cf9 /**\
 *  
\f1 \'ca\'d3\'c6\'b5\'b2\'a5\'b7\'c5
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )play:(\cf3 UIButton\cf0  *)sender \{\
    \
    [\cf11 _player\cf0  \cf4 play\cf0 ];\
    \
\}\
\
\cf9 /**\
 *  
\f1 \'ca\'d3\'c6\'b5\'d4\'dd\'cd\'a3
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )pause:(\cf2 id\cf0 )sender \{\
    [\cf11 _player\cf0  \cf4 pause\cf0 ];\
\}\
\
\cf9 /**\
 *  
\f1 \'c9\'cf\'d2\'bb\'b8\'f6
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )last:(\cf2 id\cf0 )sender \{\
    \
\}\
\
\cf9 /**\
 *  
\f1 \'cf\'c2\'d2\'bb\'b8\'f6
\f0 \
 */\cf0 \
- (\cf2 IBAction\cf0 )next:(\cf2 id\cf0 )sender \{\
        \cf3 NSString\cf0  *path = [[\cf3 NSBundle\cf0  \cf4 mainBundle\cf0 ] \cf4 pathForResource\cf0 :\cf5 @"ThinkDiff.3gp"\cf0  \cf4 ofType\cf0 :\cf2 nil\cf0 ];\
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 fileURLWithPath\cf0 :path];\
    \cf3 AVPlayerItem\cf0  *playItem = [\cf3 AVPlayerItem\cf0  \cf4 playerItemWithURL\cf0 :url];\
    [\cf11 _player\cf0  \cf4 replaceCurrentItemWithPlayerItem\cf0 :playItem];\
    \
\}\
\
\
- (\cf2 IBAction\cf0 )SliderChange:(\cf3 UISlider\cf0  *)sender \{\
    \
\
    \
    [\cf11 _player\cf0  \cf4 seekToTime\cf0 :\cf4 CMTimeMake\cf0 (\cf11 _player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 value\cf0  * sender.\cf12 value\cf0  ,\cf11 _player\cf0 .\cf12 currentItem\cf0 .\cf12 duration\cf0 .\cf12 timescale\cf0 ) \cf4 completionHandler\cf0 :^(\cf2 BOOL\cf0  finished) \{\
       \
        \
    \}];\
\}\
- (\cf2 IBAction\cf0 )layerAnimention:(\cf2 id\cf0 )sender \{\
\cf6 //    [self testLayerAnimation1];\cf0 \
    [\cf2 self\cf0  \cf10 testRotateAnimation2\cf0 ];\
    \
\}\
\cf6 //
\f1 \'b1\'df\'bd\'e7\'b6\'af\'bb\'ad
\f0 \cf0 \
- (\cf2 void\cf0 )testLayerAnimation1\{\
    \
    \cf3 CABasicAnimation\cf0  *boundsAnimation = [\cf3 CABasicAnimation\cf0  \cf4 animationWithKeyPath\cf0 :\cf5 @"bounds"\cf0 ];\
    \cf6 //
\f1 \'bf\'aa\'ca\'bc\'d6\'b5
\f0 \cf0 \
    boundsAnimation.\cf12 fromValue\cf0  = [\cf3 NSValue\cf0  \cf4 valueWithCGRect\cf0 :\cf11 _videoLayer\cf0 .\cf12 bounds\cf0  ];\
    \cf6 //
\f1 \'b6\'af\'bb\'ad\'bd\'e1\'ca\'f8\'d6\'b5
\f0 \cf0 \
    boundsAnimation.\cf12 toValue\cf0  = [\cf3 NSValue\cf0  \cf4 valueWithCGRect\cf0 :\cf4 CGRectMake\cf0 (\cf8 0\cf0 , \cf8 100\cf0 , \cf2 self\cf0 .\cf12 view\cf0 .\cf12 frame\cf0 .\cf12 size\cf0 .\cf12 width\cf0 , \cf8 100\cf0 )];\
    \
    \cf6 //
\f1 \'c9\'e8\'d6\'c3\'ca\'b1\'bc\'e4
\f0 \cf0 \
    boundsAnimation.\cf12 duration\cf0  = \cf8 3.0\cf0 ;\
    boundsAnimation.\cf12 autoreverses\cf0  = \cf2 NO\cf0 ;\
\cf6 //    boundsAnimation.repeatCount = NSNotFound;\cf0 \
    \cf6 //
\f1 \'cc\'ed\'bc\'d3
\f0 layer
\f1 \'b2\'e3
\f0  
\f1 \'b6\'af\'bb\'ad\'a3\'a8\'ba\'cb\'d0\'c4\'b6\'af\'bb\'ad\'a3\'a9
\f0 \cf0 \
    [\cf11 _videoLayer\cf0  \cf4 addAnimation\cf0 :boundsAnimation \cf4 forKey\cf0 :\cf2 nil\cf0 ];\
\}\
\cf6 //
\f1 \'d0\'fd\'d7\'aa\'b6\'af\'bb\'ad
\f0 \cf0 \
- (\cf2 void\cf0 )testRotateAnimation2\{\
    \cf3 CABasicAnimation\cf0  *rotate = [\cf3 CABasicAnimation\cf0  \cf4 animationWithKeyPath\cf0 :\cf5 @"transform.rotation"\cf0 ];\
    rotate.\cf12 toValue\cf0  = [\cf3 NSNumber\cf0  \cf4 numberWithFloat\cf0 :\cf15 M_PI\cf0 ];\
    rotate.\cf12 duration\cf0  = \cf8 3.0\cf0 ;\
    rotate.\cf12 autoreverses\cf0  = \cf2 NO\cf0 ;\
    [\cf11 _videoLayer\cf0  \cf4 addAnimation\cf0 :rotate \cf4 forKey\cf0 :\cf2 nil\cf0 ];\
\
\}\
\
- (\cf2 IBAction\cf0 )touchDownSlidr:(\cf2 id\cf0 )sender \{\
    \
    \cf6 //
\f1 \'b0\'b4\'cf\'c2\'ca\'b1
\f0  
\f1 \'ca\'d3\'c6\'b5\'d4\'dd\'cd\'a3
\f0 \cf0 \
    [\cf11 _player\cf0  \cf4 pause\cf0 ];\
    \
    \
    \
\}\
\
\cf6 //
\f1 \'ca\'d6\'c0\'eb\'bf\'aa\'c6\'c1\'c4\'bb
\f0  
\f1 \'be\'cd\'bf\'c9\'d2\'d4\'c8\'c3\'ca\'d3\'c6\'b5\'b2\'a5\'b7\'c5
\f0 \cf0 \
- (\cf2 IBAction\cf0 )sliderTouchUpInsid:(\cf3 UISlider\cf0  *)sender \{\
    [\cf11 _player\cf0  \cf4 play\cf0 ];\
\}
\fs36 \
\
\
//
\f1 \'cf\'df\'b3\'cc
\f0 \
   \
  [\cf3 NSThread\cf0  \cf4 detachNewThreadSelector\cf0 :\cf2 @selector\cf0 (doThing1) \cf4 toTarget\cf0 :\cf2 self\cf0  \cf4 withObject\cf0 :\cf2 nil\cf0 ];\
    \
    \cf3 NSThread\cf0  *thread = [[\cf3 NSThread\cf0  \cf4 alloc\cf0 ] \cf4 initWithTarget\cf0 :\cf2 self\cf0  \cf4 selector\cf0 :\cf2 @selector\cf0 (doThing2) \cf4 object\cf0 :\cf2 nil\cf0 ];\
    \
    [thread \cf4 start\cf0 ];\
\
\

\f1 //\'cf\'df\'b3\'cc\'cf\'c2\'d4\'d8\

\f0    [\cf2 self\cf0  \cf10 creatImageView\cf0 ];\
    [\cf3 NSThread\cf0  \cf4 detachNewThreadSelector\cf0 :\cf2 @selector\cf0 (downloadImage) \cf4 toTarget\cf0 :\cf2 self\cf0  \cf4 withObject\cf0 :\cf2 nil\cf0 ];\
    \
\}\
\
- (\cf2 void\cf0 )downloadImage\{\
    \
    \cf3 NSURL\cf0  *url = [\cf3 NSURL\cf0  \cf4 URLWithString\cf0 :\cf5 @"http://img5.duitang.com/uploads/item/201408/12/20140812133247_zcLCB.jpeg"\cf0 ];\
    \cf3 NSData\cf0  *data = [\cf3 NSData\cf0  \cf4 dataWithContentsOfURL\cf0 :url];\
    \
    \cf3 UIImage\cf0  *image = [\cf3 UIImage\cf0  \cf4 imageWithData\cf0 :data];\
    \
    [\cf2 self\cf0  \cf4 performSelector\cf0 :\cf2 @selector\cf0 (backMainThread:) \cf4 onThread\cf0 :[\cf3 NSThread\cf0  \cf4 mainThread\cf0 ] \cf4 withObject\cf0 :image \cf4 waitUntilDone\cf0 :\cf2 NO\cf0 ];\
    \
\
\}\
\
- (\cf2 void\cf0 )backMainThread:(\cf3 UIImage\cf0  *)image\{\
\
\
    \cf2 self\cf0 .\cf11 imageView\cf0 .\cf12 image\cf0  = image;\
    \
\}\
\
  \cf3 NSInvocationOperation\cf0  *inv1 = [[\cf3 NSInvocationOperation\cf0  \cf4 alloc\cf0 ]\cf4 initWithTarget\cf0 :\cf2 self\cf0  \cf4 selector\cf0 :\cf2 @selector\cf0 (doThing1) \cf4 object\cf0 :\cf2 nil\cf0 ];\
    \
    \
    \cf3 NSInvocationOperation\cf0  *inv2 = [[\cf3 NSInvocationOperation\cf0  \cf4 alloc\cf0 ] \cf4 initWithTarget\cf0 :\cf2 self\cf0  \cf4 selector\cf0 :\cf2 @selector\cf0 (doThing2) \cf4 object\cf0 :\cf2 nil\cf0 ];\
\
    \cf3 NSBlockOperation\cf0  *block = [\cf3 NSBlockOperation\cf0  \cf4 blockOperationWithBlock\cf0 :^\{\
        \cf4 NSLog\cf0 (\cf5 @"---%@---"\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
    \}];\
    \
    \
    \cf3 NSOperationQueue\cf0  *queue = [[\cf3 NSOperationQueue\cf0  \cf4 alloc\cf0 ] \cf4 init\cf0 ];\
    \
    [queue \cf4 addOperation\cf0 :block];\
    [queue \cf4 addOperation\cf0 :inv1];\
    [queue \cf4 addOperation\cf0 :inv2];\
\
    \cf12 dispatch_queue_t\cf0  global = \cf4 dispatch_get_global_queue\cf0 (\cf8 0\cf0 , \cf8 0\cf0 );\
    \
    \cf12 dispatch_queue_t\cf0  mainqueue =  \cf4 dispatch_get_main_queue\cf0 ();\
    \
    \cf4 dispatch_async\cf0 (global, ^\{\
        \cf4 NSLog\cf0 (\cf5 @"111%@111"\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
        \cf4 dispatch_async\cf0 (mainqueue, ^\{\
            \cf4 NSLog\cf0 (\cf5 @"%@
\f1 \cf5 \'bb\'d8\'b5\'bd\'d6\'f7\'cf\'df\'b3\'cc
\f0 \cf5 "\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
        \});\
    \});\
    \
    \
    \cf4 dispatch_async\cf0 (global, ^\{\
        \cf4 NSLog\cf0 (\cf5 @"222%@222"\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
    \});\
\
    \cf12 dispatch_group_t\cf0   group = \cf4 dispatch_group_create\cf0 ();\
    \
    \cf4 dispatch_group_async\cf0 (group, \cf4 dispatch_get_global_queue\cf0 (\cf8 0\cf0 , \cf8 0\cf0 ), ^\{\
        \cf4 NSLog\cf0 (\cf5 @"~~~~%@~~~~"\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
    \});\
    \
    \cf4 dispatch_group_async\cf0 (group, \cf4 dispatch_get_global_queue\cf0 (\cf8 0\cf0 , \cf8 0\cf0 ), ^\{\
        \cf4 NSLog\cf0 (\cf5 @"####%@###"\cf0 ,[\cf3 NSThread\cf0  \cf4 currentThread\cf0 ]);\
    \});\
}